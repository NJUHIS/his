<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njuhis.his.mapper.RegisterMapper">
  <resultMap id="BaseResultMap" type="com.njuhis.his.model.Register">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="RealName" jdbcType="VARCHAR" property="realname" />
    <result column="Gender" jdbcType="INTEGER" property="gender" />
    <result column="IDnumber" jdbcType="VARCHAR" property="idnumber" />
    <result column="BirthDate" jdbcType="DATE" property="birthdate" />
    <result column="Age" jdbcType="INTEGER" property="age" />
    <result column="HomeAddress" jdbcType="VARCHAR" property="homeaddress" />
    <result column="MedicalRecordId" jdbcType="INTEGER" property="medicalRecordId" />
    <result column="VisitDate" jdbcType="DATE" property="visitdate" />
    <result column="Noon" jdbcType="INTEGER" property="noon" />
    <result column="DeptId" jdbcType="INTEGER" property="deptid" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="RegistId" jdbcType="INTEGER" property="registid" />
    <result column="SettleID" jdbcType="INTEGER" property="settleid" />
    <result column="IsBook" jdbcType="INTEGER" property="isbook" />
    <result column="RegisterTime" jdbcType="BIGINT" property="registertime" />
    <result column="RegisterID" jdbcType="INTEGER" property="registerid" />
    <result column="VisitState" jdbcType="INTEGER" property="visitstate" />
    <result column="patientID" jdbcType="INTEGER" property="patientid" />
    <result column="scheduleId" jdbcType="INTEGER" property="scheduleId"/>
  </resultMap>

  <resultMap id="BaseResultMapCost" type="com.njuhis.his.model.Register" extends="BaseResultMap">
    <association property="invoice" column="InvoiceId" javaType="com.njuhis.his.model.Invoice">
      <id column="iid" jdbcType="INTEGER" property="id" />
      <result column="InvoiceNum" jdbcType="VARCHAR" property="invoicenum" />
      <result column="Money" jdbcType="DECIMAL" property="money" />
      <result column="State" jdbcType="INTEGER" property="state" />
      <result column="CreationTime" jdbcType="BIGINT" property="creationtime" />
      <result column="UserId" jdbcType="INTEGER" property="userid" />
      <result column="DailyState" jdbcType="INTEGER" property="dailystate" />
    </association>
    <collection property="patientCostsList" ofType="com.njuhis.his.model.PatientCosts">
      <id column="cid" jdbcType="INTEGER" property="id" />
      <result column="InvoiceId" jdbcType="INTEGER" property="invoiceid" />
      <result column="RegisterId" jdbcType="INTEGER" property="registerid" />
      <result column="Name" jdbcType="VARCHAR" property="name" />
      <result column="Price" jdbcType="DECIMAL" property="price" />
      <result column="DeptId" jdbcType="VARCHAR" property="deptid" />
      <result column="State" jdbcType="INTEGER" property="state" />
      <result column="DelMark" jdbcType="INTEGER" property="delmark" />
    </collection>
  </resultMap>
  <resultMap id="BaseResultMapDoctorAndDep" type="com.njuhis.his.model.Register" extends="BaseResultMap">
    <association property="user" column="Userid" javaType="com.njuhis.his.model.User">
      <id column="uid" jdbcType="INTEGER" property="id" />
      <result column="uname" jdbcType="VARCHAR" property="realname" />
    </association>
    <association property="department" column="Userid" javaType="com.njuhis.his.model.Department">
      <id column="did" jdbcType="INTEGER" property="id" />
      <result column="deptname" jdbcType="VARCHAR" property="deptname" />
    </association>
  </resultMap>
  <resultMap id="BaseResultMapCount" type="com.njuhis.his.model.PatientVo">
    <result column="Count1" jdbcType="INTEGER" property="count" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from register
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.njuhis.his.model.Register" useGeneratedKeys="true"  keyProperty="id">
    insert into register (id, RealName, Gender, 
      IDnumber, BirthDate, Age, 
      HomeAddress, MedicalRecordId,
      VisitDate, Noon, DeptId, 
      UserId, RegistId, SettleID, 
      IsBook, RegisterTime, RegisterID, 
      VisitState, patientID,scheduleId)
    values (#{id,jdbcType=INTEGER}, #{realname,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{idnumber,jdbcType=VARCHAR}, #{birthdate,jdbcType=DATE}, #{age,jdbcType=INTEGER}, 
      #{homeaddress,jdbcType=VARCHAR}, #{medicalRecordId,jdbcType=INTEGER},
      #{visitdate,jdbcType=DATE}, #{noon,jdbcType=INTEGER}, #{deptid,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER}, #{registid,jdbcType=INTEGER}, #{settleid,jdbcType=INTEGER}, 
      #{isbook,jdbcType=INTEGER}, #{registertime,jdbcType=BIGINT}, #{registerid,jdbcType=INTEGER}, 
      #{visitstate,jdbcType=INTEGER}, #{patientid,jdbcType=INTEGER},#{scheduleId})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.njuhis.his.model.Register">
    update register
    set RealName = #{realname,jdbcType=VARCHAR},
      Gender = #{gender,jdbcType=INTEGER},
      IDnumber = #{idnumber,jdbcType=VARCHAR},
      BirthDate = #{birthdate,jdbcType=DATE},
      Age = #{age,jdbcType=INTEGER},
      HomeAddress = #{homeaddress,jdbcType=VARCHAR},
      MedicalRecordId = #{medicalRecordId,jdbcType=INTEGER},
      VisitDate = #{visitdate,jdbcType=DATE},
      Noon = #{noon,jdbcType=INTEGER},
      DeptId = #{deptid,jdbcType=INTEGER},
      UserId = #{userid,jdbcType=INTEGER},
      RegistId = #{registid,jdbcType=INTEGER},
      SettleID = #{settleid,jdbcType=INTEGER},
      IsBook = #{isbook,jdbcType=INTEGER},
      RegisterTime = #{registertime,jdbcType=BIGINT},
      RegisterID = #{registerid,jdbcType=INTEGER},
      VisitState = #{visitstate,jdbcType=INTEGER},
      patientID = #{patientid,jdbcType=INTEGER},
      scheduleId=#{scheduleId}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, RealName, Gender, IDnumber, BirthDate, Age, HomeAddress, MedicalRecordId,
    VisitDate, Noon, DeptId, UserId, RegistId, SettleID, IsBook, RegisterTime, RegisterID, 
    VisitState, patientID, scheduleId
    from register
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, RealName, Gender, IDnumber, BirthDate, Age,  HomeAddress, MedicalRecordId,
    VisitDate, Noon, DeptId, UserId, RegistId, SettleID, IsBook, RegisterTime, RegisterID, 
    VisitState, patientID, scheduleId
    from register
  </select>
  <select id="selectByIdNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
  select id, RealName, Gender, IDnumber, BirthDate, Age, HomeAddress, MedicalRecordId,
  VisitDate, Noon, DeptId, UserId, RegistId, SettleID, IsBook, RegisterTime, RegisterID,
  VisitState, patientID, scheduleId
  from register
  where idnumber = #{idnumber}
  </select>
  <select id="selectByPatientId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select id, RealName, Gender, IDnumber, BirthDate, Age,  HomeAddress, MedicalRecordId,
  VisitDate, Noon, DeptId, UserId, RegistId, SettleID, IsBook, RegisterTime, RegisterID,
  VisitState, patientID,scheduleId
  from register
  where patientid = #{patientid,jdbcType=INTEGER}
  </select>

  <select id="selectAllCost" resultMap="BaseResultMapCost">
    select r.id, r.RealName, r.Gender, r.IDnumber, r.BirthDate, r.Age, r.HomeAddress, r.MedicalRecordId,
    r.VisitDate, r.Noon, r.DeptId, r.UserId, r.RegistId, r.SettleID, r.IsBook, r.RegisterTime, r.RegisterID,
    r.VisitState, r.patientID, r.scheduleId, c.id cid, c.InvoiceId, c.RegisterId, c.Name, c.Price, c.DeptId, c.State, c.DelMark
    from register r
    inner join patientcosts c where c.RegisterId=r.id
  </select>
  <select id="selectByPrimaryKeyCost" parameterType="java.lang.Integer" resultMap="BaseResultMapCost">
    select r.id, r.RealName, r.Gender, r.IDnumber, r.BirthDate, r.Age, r.HomeAddress, r.MedicalRecordId,
    r.VisitDate, r.Noon, r.DeptId, r.UserId, r.RegistId, r.SettleID, r.IsBook, r.RegisterTime, r.RegisterID,
    r.VisitState, r.patientID, r.scheduleId, c.id cid, c.InvoiceId, c.RegisterId, c.Name, c.Price, c.DeptId, c.State, c.DelMark
    from register r
    inner join patientcosts c where c.RegisterId=r.id
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectPatientCount" parameterType="com.njuhis.his.model.PatientVo" resultMap="BaseResultMapCount">
  select count(id) count1
  from register
  where  RegisterTime between #{begintime} and #{endtime}
  </select>
  <select id="selectByConditions" parameterType="java.lang.String" resultMap="BaseResultMapDoctorAndDep">
    select r.id, r.RealName, r.Gender, r.IDnumber, r.BirthDate, r.Age, r.HomeAddress, r.MedicalRecordId,
    r.VisitDate, r.Noon, r.DeptId, r.UserId, r.RegistId, r.SettleID, r.IsBook, r.RegisterTime, r.RegisterID,
    r.VisitState, r.patientID, r.scheduleId,u.id uid,u.realname uname,d.id did,d.deptname
    from register r
    inner join user u on r.UserId = u.id
    inner join department d on r.deptid = d.id
    where r.id like concat('%',concat(#{conditions},'%'))
    or r.RealName like concat('%',concat(#{conditions},'%'))
    or d.deptname like concat('%',concat(#{conditions},'%'))
    or u.realname like concat('%',concat(#{conditions},'%'))
  </select>
  <select id="selectCostByConditions" resultMap="BaseResultMapCost">
    select r.id, r.RealName, r.Gender, r.IDnumber, r.BirthDate, r.Age, r.HomeAddress, r.MedicalRecordId,
    r.VisitDate, r.Noon, r.DeptId, r.UserId, r.RegistId, r.SettleID, r.IsBook, r.RegisterTime, r.RegisterID,
    r.VisitState, r.patientID, r.scheduleId, c.id cid, c.InvoiceId, c.RegisterId, c.Name, c.Price, c.DeptId, c.State, c.DelMark,
    i.id iid, i.InvoiceNum, i.Money, i.State, i.CreationTime, i.UserId, i.DailyState
    from register r
    inner join patientcosts c on c.RegisterId=r.id
    inner join invoice i on c.InvoiceId = i.id
    where r.id like concat('%',concat(#{conditions},'%'))
    or r.RealName like concat('%',concat(#{conditions},'%'))
    or i.InvoiceNum like concat('%',concat(#{conditions},'%'))
  </select>
</mapper>